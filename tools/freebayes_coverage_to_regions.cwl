cwlVersion: v1.2
class: CommandLineTool
id: freebayes_coverage_to_regions
doc: |-
  Generates regions with even sequencing coverage, provided an input of coverage per-position as
  generated by bamtools coverage.  In other words, generates regions such that the depth of
  coverage is approximately equal for each.  These can be used when variant calling to reduce
  variance in job runtime.

requirements:
  - class: InlineJavascriptRequirement
  - class: ShellCommandRequirement
  - class: ResourceRequirement
    coresMin: $(inputs.cpu)
    ramMin: ${return inputs.ram * 1000}
  - class: DockerRequirement
    dockerPull: 'staphb/freebayes:1.3.6'
  - class: InitialWorkDirRequirement
    listing:
      - entryname: coverage_to_regions.py
        entry:
          $include: ../scripts/coverage_to_regions.py

baseCommand: []

arguments:
  - position: 0
    valueFrom: >
      samtools depth -o depths.txt
  - position: 10
    prefix: "&&"
    shellQuote: false
    valueFrom: >
      python3 coverage_to_regions.py depths.txt

stdout: regions.txt

inputs:
  input_reads: { type: 'File', secondaryFiles: [{ pattern: '.bai', required: false}, { pattern: '^.bai', required: false}, { pattern: '.crai', required: false}, { pattern: '^.crai', required: false}], inputBinding: { position: 9 }, doc: "Input reads over which to calculate coverage and determine regions." }
  reference_fai: { type: 'File', inputBinding: { position: 18 }, doc: "Samtools index for reference fasta." }
  num_regions: { type: 'int', inputBinding: { position: 19 }, doc: "Total number of regions to break the genome into." }

  # Resource Control
  ram: { type: 'int?', default: 32, doc: "Minimum reserved RAM for the task." }
  cpu: { type: 'int?', default: 16, inputBinding: { position: 2, prefix: "--threads" }, doc: "Minimum reserved number of CPU cores for the task." }

outputs:
  output:
    type: 'stdout'
  regions:
    type: 'string[]'
    outputBinding:
      glob: "regions.txt"
      outputEval: |
        ${
          var lines = self[0].contents.trim().split('\n');
          return lines;
        }
